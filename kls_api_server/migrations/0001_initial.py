# Generated by Django 4.2.4 on 2023-08-13 23:13

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SetModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_name', models.CharField(max_length=64)),
                ('set_description', models.CharField(max_length=256)),
                ('set_template_file', models.FileField(upload_to='set_templates')),
                ('set_template', models.TextField(default='')),
            ],
            options={
                'ordering': ['set_name', 'set_description'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('martial_art', models.CharField(max_length=64)),
                ('expertise_level', models.IntegerField(choices=[(0, 'Beginner'), (1, 'Intermediate'), (2, 'Advanced'), (3, 'Expert')], default=0)),
                ('last_session', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(related_name='auth_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='auth_users', to='auth.permission')),
            ],
            options={
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MovementModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_name', models.CharField(max_length=64)),
                ('movement_description', models.CharField(max_length=256)),
                ('movement_feedback_message', models.CharField(max_length=256)),
                ('movement_start_frame', models.IntegerField()),
                ('movement_end_frame', models.IntegerField()),
                ('movement_order', models.IntegerField()),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kls_api_server.setmodel')),
            ],
            options={
                'ordering': ['set', 'movement_order', 'movement_name'],
            },
        ),
        migrations.CreateModel(
            name='MovementErrorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_name', models.CharField(max_length=64)),
                ('movement_description', models.CharField(max_length=256)),
                ('movement_feedback_message', models.CharField(max_length=256)),
                ('movement_start_frame', models.IntegerField()),
                ('movement_end_frame', models.IntegerField()),
                ('movement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kls_api_server.movementmodel')),
            ],
            options={
                'ordering': ['movement', 'movement_name'],
            },
        ),
        migrations.CreateModel(
            name='KeyPointsMovementModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keypoint_name', models.IntegerField(choices=[(0, 'NOSE'), (1, 'LEFT_EYE_INNER'), (2, 'LEFT_EYE'), (3, 'LEFT_EYE_OUTER'), (4, 'RIGHT_EYE_INNER'), (5, 'RIGHT_EYE'), (6, 'RIGHT_EYE_OUTER'), (7, 'LEFT_EAR'), (8, 'RIGHT_EAR'), (9, 'MOUTH_LEFT'), (10, 'MOUTH_RIGHT'), (11, 'LEFT_SHOULDER'), (12, 'RIGHT_SHOULDER'), (13, 'LEFT_ELBOW'), (14, 'RIGHT_ELBOW'), (15, 'LEFT_WRIST'), (16, 'RIGHT_WRIST'), (17, 'LEFT_PINKY'), (18, 'RIGHT_PINKY'), (19, 'LEFT_INDEX'), (20, 'RIGHT_INDEX'), (21, 'LEFT_THUMB'), (22, 'RIGHT_THUMB'), (23, 'LEFT_HIP'), (24, 'RIGHT_HIP'), (25, 'LEFT_KNEE'), (26, 'RIGHT_KNEE'), (27, 'LEFT_ANKLE'), (28, 'RIGHT_ANKLE'), (29, 'LEFT_HEEL'), (30, 'RIGHT_HEEL'), (31, 'LEFT_FOOT_INDEX'), (32, 'RIGHT_FOOT_INDEX')], default=0)),
                ('movement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kls_api_server.movementmodel')),
            ],
            options={
                'ordering': ['movement', 'keypoint_name'],
            },
        ),
        migrations.CreateModel(
            name='KeyPointsMovementErrorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keypoint_name', models.IntegerField(choices=[(0, 'NOSE'), (1, 'LEFT_EYE_INNER'), (2, 'LEFT_EYE'), (3, 'LEFT_EYE_OUTER'), (4, 'RIGHT_EYE_INNER'), (5, 'RIGHT_EYE'), (6, 'RIGHT_EYE_OUTER'), (7, 'LEFT_EAR'), (8, 'RIGHT_EAR'), (9, 'MOUTH_LEFT'), (10, 'MOUTH_RIGHT'), (11, 'LEFT_SHOULDER'), (12, 'RIGHT_SHOULDER'), (13, 'LEFT_ELBOW'), (14, 'RIGHT_ELBOW'), (15, 'LEFT_WRIST'), (16, 'RIGHT_WRIST'), (17, 'LEFT_PINKY'), (18, 'RIGHT_PINKY'), (19, 'LEFT_INDEX'), (20, 'RIGHT_INDEX'), (21, 'LEFT_THUMB'), (22, 'RIGHT_THUMB'), (23, 'LEFT_HIP'), (24, 'RIGHT_HIP'), (25, 'LEFT_KNEE'), (26, 'RIGHT_KNEE'), (27, 'LEFT_ANKLE'), (28, 'RIGHT_ANKLE'), (29, 'LEFT_HEEL'), (30, 'RIGHT_HEEL'), (31, 'LEFT_FOOT_INDEX'), (32, 'RIGHT_FOOT_INDEX')], default=0)),
                ('movement_error', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kls_api_server.movementerrormodel')),
            ],
            options={
                'ordering': ['movement_error', 'keypoint_name'],
            },
        ),
    ]
